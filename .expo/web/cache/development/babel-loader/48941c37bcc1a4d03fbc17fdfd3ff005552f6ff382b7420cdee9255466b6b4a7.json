{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Svg, { Circle } from \"react-native-svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProgressCircles = function ProgressCircles(_ref) {\n  var percentages = _ref.percentages,\n    color = _ref.color,\n    title = _ref.title,\n    details = _ref.details;\n  var circleRadius = 16;\n  var strokeWidth = 5;\n  var circumference = 2 * Math.PI * (circleRadius - strokeWidth / 2);\n  var calculateDashArray = function calculateDashArray(percentage) {\n    var dashArray = [percentage / 100 * circumference, circumference];\n    return dashArray.join(\" \");\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [percentages.map(function (percentage, index) {\n      return _jsxs(Svg, {\n        height: circleRadius * 2,\n        width: circleRadius * 2,\n        style: {\n          marginRight: 10,\n          transform: [{\n            rotate: '270deg'\n          }]\n        },\n        children: [_jsx(Circle, {\n          cx: circleRadius,\n          cy: circleRadius,\n          r: circleRadius - strokeWidth / 2,\n          fill: \"transparent\",\n          stroke: \"#e9eff6\",\n          strokeWidth: strokeWidth\n        }), _jsx(Circle, {\n          cx: circleRadius,\n          cy: circleRadius,\n          r: circleRadius - strokeWidth / 2,\n          fill: \"transparent\",\n          stroke: color,\n          strokeWidth: strokeWidth,\n          strokeDasharray: calculateDashArray(percentage),\n          strokeLinecap: \"round\"\n        })]\n      }, index);\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.bold,\n        children: title\n      }), _jsx(Text, {\n        style: [styles.details, styles.bold],\n        children: details\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  bold: {\n    fontWeight: \"500\"\n  },\n  details: {\n    color: \"#b5b3b3\"\n  }\n});\nexport default ProgressCircles;","map":{"version":3,"names":["Svg","Circle","jsx","_jsx","jsxs","_jsxs","ProgressCircles","_ref","percentages","color","title","details","circleRadius","strokeWidth","circumference","Math","PI","calculateDashArray","percentage","dashArray","join","View","style","styles","container","children","map","index","height","width","marginRight","transform","rotate","cx","cy","r","fill","stroke","strokeDasharray","strokeLinecap","Text","bold","StyleSheet","create","flexDirection","alignItems","fontWeight"],"sources":["/workspaces/codespaces-blank/components/ProgressCircles.js"],"sourcesContent":["import { View, StyleSheet, Text } from \"react-native\";\nimport Svg, { Circle } from \"react-native-svg\";\n\nconst ProgressCircles = ({ percentages, color, title, details }) => {\n  const circleRadius = 16;\n  const strokeWidth = 5;\n  const circumference = 2 * Math.PI * (circleRadius - strokeWidth / 2);\n\n  const calculateDashArray = (percentage) => {\n    const dashArray = [(percentage / 100) * circumference, circumference];\n    return dashArray.join(\" \");\n  };\n\n  return (\n    <View style={styles.container}>\n      {percentages.map((percentage, index) => (\n        <Svg\n          key={index}\n          height={circleRadius * 2}\n          width={circleRadius * 2}\n          style={{ marginRight: 10, transform: [{ rotate: '270deg' }], }}\n        >\n          <Circle\n            cx={circleRadius}\n            cy={circleRadius}\n            r={circleRadius - strokeWidth / 2}\n            fill=\"transparent\"\n            stroke=\"#e9eff6\"\n            strokeWidth={strokeWidth}\n          />\n          <Circle\n            cx={circleRadius}\n            cy={circleRadius}\n            r={circleRadius - strokeWidth / 2}\n            fill=\"transparent\"\n            stroke={color}\n            strokeWidth={strokeWidth}\n            strokeDasharray={calculateDashArray(percentage)}\n            strokeLinecap=\"round\"\n          />\n        </Svg>\n      ))}\n      <View>\n        <Text style={styles.bold}>{title}</Text>\n        <Text style={[styles.details, styles.bold]}>{details}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  bold: {\n    fontWeight: \"500\",\n  },\n  details: {\n    color: \"#b5b3b3\",\n  },\n});\n\nexport default ProgressCircles;\n"],"mappings":";;;AACA,OAAOA,GAAG,IAAIC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAAC,IAAA,EAA+C;EAAA,IAAzCC,WAAW,GAAAD,IAAA,CAAXC,WAAW;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EAC3D,IAAMC,YAAY,GAAG,EAAE;EACvB,IAAMC,WAAW,GAAG,CAAC;EACrB,IAAMC,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,IAAIJ,YAAY,GAAGC,WAAW,GAAG,CAAC,CAAC;EAEpE,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,UAAU,EAAK;IACzC,IAAMC,SAAS,GAAG,CAAED,UAAU,GAAG,GAAG,GAAIJ,aAAa,EAAEA,aAAa,CAAC;IACrE,OAAOK,SAAS,CAACC,IAAI,CAAC,GAAG,CAAC;EAC5B,CAAC;EAED,OACEf,KAAA,CAACgB,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC3BjB,WAAW,CAACkB,GAAG,CAAC,UAACR,UAAU,EAAES,KAAK;MAAA,OACjCtB,KAAA,CAACL,GAAG;QAEF4B,MAAM,EAAEhB,YAAY,GAAG,CAAE;QACzBiB,KAAK,EAAEjB,YAAY,GAAG,CAAE;QACxBU,KAAK,EAAE;UAAEQ,WAAW,EAAE,EAAE;UAAEC,SAAS,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAS,CAAC;QAAG,CAAE;QAAAP,QAAA,GAE/DtB,IAAA,CAACF,MAAM;UACLgC,EAAE,EAAErB,YAAa;UACjBsB,EAAE,EAAEtB,YAAa;UACjBuB,CAAC,EAAEvB,YAAY,GAAGC,WAAW,GAAG,CAAE;UAClCuB,IAAI,EAAC,aAAa;UAClBC,MAAM,EAAC,SAAS;UAChBxB,WAAW,EAAEA;QAAY,CAC1B,CAAC,EACFV,IAAA,CAACF,MAAM;UACLgC,EAAE,EAAErB,YAAa;UACjBsB,EAAE,EAAEtB,YAAa;UACjBuB,CAAC,EAAEvB,YAAY,GAAGC,WAAW,GAAG,CAAE;UAClCuB,IAAI,EAAC,aAAa;UAClBC,MAAM,EAAE5B,KAAM;UACdI,WAAW,EAAEA,WAAY;UACzByB,eAAe,EAAErB,kBAAkB,CAACC,UAAU,CAAE;UAChDqB,aAAa,EAAC;QAAO,CACtB,CAAC;MAAA,GAtBGZ,KAuBF,CAAC;IAAA,CACP,CAAC,EACFtB,KAAA,CAACgB,IAAI;MAAAI,QAAA,GACHtB,IAAA,CAACqC,IAAI;QAAClB,KAAK,EAAEC,MAAM,CAACkB,IAAK;QAAAhB,QAAA,EAAEf;MAAK,CAAO,CAAC,EACxCP,IAAA,CAACqC,IAAI;QAAClB,KAAK,EAAE,CAACC,MAAM,CAACZ,OAAO,EAAEY,MAAM,CAACkB,IAAI,CAAE;QAAAhB,QAAA,EAAEd;MAAO,CAAO,CAAC;IAAA,CACxD,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMY,MAAM,GAAGmB,UAAU,CAACC,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDJ,IAAI,EAAE;IACJK,UAAU,EAAE;EACd,CAAC;EACDnC,OAAO,EAAE;IACPF,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAeH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}