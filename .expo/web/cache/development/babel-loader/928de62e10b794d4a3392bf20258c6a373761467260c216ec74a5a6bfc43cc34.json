{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Menu = function Menu(_ref) {\n  var options = _ref.options,\n    onSelect = _ref.onSelect;\n  var _useState = useState(options[0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  useEffect(function () {\n    onSelect(selected);\n  }, []);\n  var optionSelected = function optionSelected(option) {\n    return selected === option ? styles.selected : {};\n  };\n  var textSelected = function textSelected(text) {\n    return selected === text ? {\n      fontWeight: \"500\"\n    } : {};\n  };\n  var key = 1;\n  return _jsx(View, {\n    style: styles.container,\n    children: options.map(function (option) {\n      return _jsx(Pressable, {\n        style: styles.option,\n        onPress: function onPress() {\n          setSelected(option);\n          onSelect(option);\n        },\n        children: _jsx(View, {\n          style: optionSelected(option),\n          children: _jsx(Text, {\n            style: [styles.text, textSelected(option)],\n            children: option\n          })\n        })\n      }, key++);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#F4F5F6\",\n    borderColor: \"#e6e6e6\",\n    borderRadius: 20,\n    borderWidth: 2,\n    flexDirection: \"row\",\n    marginBottom: 20,\n    marginTop: 20,\n    overflow: \"hidden\"\n  },\n  selected: {\n    backgroundColor: \"white\",\n    borderColor: \"#e6e6e6\",\n    borderRadius: 20,\n    elevation: 8,\n    paddingVertical: 8\n  },\n  option: {\n    flex: 1\n  },\n  text: {\n    fontSize: 18,\n    textAlign: \"center\"\n  }\n});\nexport default Menu;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","Menu","_ref","options","onSelect","_useState","_useState2","_slicedToArray","selected","setSelected","optionSelected","option","styles","textSelected","text","fontWeight","key","View","style","container","children","map","Pressable","onPress","Text","StyleSheet","create","alignItems","backgroundColor","borderColor","borderRadius","borderWidth","flexDirection","marginBottom","marginTop","overflow","elevation","paddingVertical","flex","fontSize","textAlign"],"sources":["/workspaces/codespaces-blank/components/Menu.js"],"sourcesContent":["import { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { useState, useEffect } from \"react\";\n\nconst Menu = ({ options, onSelect }) => {\n  const [selected, setSelected] = useState(options[0]);\n\n  useEffect(() => {\n    onSelect(selected);\n  }, []);\n\n  const optionSelected = (option) => {\n    return selected === option ? styles.selected : {};\n  };\n\n  const textSelected = (text) => {\n    return selected === text ? { fontWeight: \"500\" } : {};\n  };\n\n  let key = 1;\n\n  return (\n    <View style={styles.container}>\n      {options.map((option) => (\n        <Pressable\n          style={styles.option}\n          onPress={() => {\n            setSelected(option);\n            onSelect(option);\n          }}\n          key={key++}\n        >\n          <View style={optionSelected(option)}>\n            <Text style={[styles.text, textSelected(option)]}>{option}</Text>\n          </View>\n        </Pressable>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: \"#F4F5F6\",\n    borderColor: \"#e6e6e6\",\n    borderRadius: 20,\n    borderWidth: 2,\n    flexDirection: \"row\",\n    marginBottom: 20,\n    marginTop: 20,\n    overflow: \"hidden\",\n  },\n  selected: {\n    backgroundColor: \"white\",\n    borderColor: \"#e6e6e6\",\n    borderRadius: 20,\n    elevation: 8,\n    paddingVertical: 8,\n  },\n  option: {\n    flex: 1,\n  },\n  text: {\n    fontSize: 18,\n    textAlign: \"center\",\n  },\n});\n\nexport default Menu;\n"],"mappings":";;;;;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5C,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAC/B,IAAAC,SAAA,GAAgCR,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5BR,SAAS,CAAC,YAAM;IACdM,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAK;IACjC,OAAOH,QAAQ,KAAKG,MAAM,GAAGC,MAAM,CAACJ,QAAQ,GAAG,CAAC,CAAC;EACnD,CAAC;EAED,IAAMK,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAK;IAC7B,OAAON,QAAQ,KAAKM,IAAI,GAAG;MAAEC,UAAU,EAAE;IAAM,CAAC,GAAG,CAAC,CAAC;EACvD,CAAC;EAED,IAAIC,GAAG,GAAG,CAAC;EAEX,OACEhB,IAAA,CAACiB,IAAI;IAACC,KAAK,EAAEN,MAAM,CAACO,SAAU;IAAAC,QAAA,EAC3BjB,OAAO,CAACkB,GAAG,CAAC,UAACV,MAAM;MAAA,OAClBX,IAAA,CAACsB,SAAS;QACRJ,KAAK,EAAEN,MAAM,CAACD,MAAO;QACrBY,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbd,WAAW,CAACE,MAAM,CAAC;UACnBP,QAAQ,CAACO,MAAM,CAAC;QAClB,CAAE;QAAAS,QAAA,EAGFpB,IAAA,CAACiB,IAAI;UAACC,KAAK,EAAER,cAAc,CAACC,MAAM,CAAE;UAAAS,QAAA,EAClCpB,IAAA,CAACwB,IAAI;YAACN,KAAK,EAAE,CAACN,MAAM,CAACE,IAAI,EAAED,YAAY,CAACF,MAAM,CAAC,CAAE;YAAAS,QAAA,EAAET;UAAM,CAAO;QAAC,CAC7D;MAAC,GAJFK,GAAG,EAKC,CAAC;IAAA,CACb;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMJ,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS;IAC1BC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,CAAC;IACdC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,CAAC;EACD3B,QAAQ,EAAE;IACRoB,eAAe,EAAE,OAAO;IACxBC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE,EAAE;IAChBM,SAAS,EAAE,CAAC;IACZC,eAAe,EAAE;EACnB,CAAC;EACD1B,MAAM,EAAE;IACN2B,IAAI,EAAE;EACR,CAAC;EACDxB,IAAI,EAAE;IACJyB,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAevC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}